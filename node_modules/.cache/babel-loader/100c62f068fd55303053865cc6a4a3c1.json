{"ast":null,"code":"export default async function display7DayData(location) {\n  if (!location) {\n    alert(\"Unexpected error. Try again\");\n  }\n  let ifSavedLocation = false;\n  let index = 0;\n  const getSavedLocations = JSON.parse(localStorage.getItem(\"savedLocations\"));\n  for (index = 0; index < getSavedLocations.length; index++) {\n    if (location === getSavedLocations[index]) {\n      ifSavedLocation = true;\n      break;\n    }\n  }\n  let dataForAllDays = [];\n  let getAllCoordinates;\n  let getNeededCoordinates;\n\n  // the location provided to us is not in the saved location, so we need to go get that lat and lon for that location\n  if (!ifSavedLocation) {\n    // alert(\"Not in saved locations\");\n    let endpoint = `https://api.openweathermap.org/geo/1.0/direct?q=${location}&appid=e15a543800b7e60db9e4e04aaf22a037`; // api to get coordinates lat and lon\n    const response = await fetch(endpoint);\n    const responseData = await response.json();\n    const newCoor = [responseData[0].lat, responseData[0].lon];\n    getNeededCoordinates = newCoor;\n    return;\n  } else {\n    getAllCoordinates = JSON.parse(localStorage.getItem(\"allCoordinates\"));\n    if (!getAllCoordinates) {\n      let defaultLatLong = [[40.7128, -74.0060], [48.8566, 2.3522], [52.5200, 13.4050]];\n      getAllCoordinates = defaultLatLong;\n      console.log(getAllCoordinates);\n    }\n    getNeededCoordinates = getAllCoordinates[index];\n  }\n  let endpoint = `https://api.openweathermap.org/data/2.5/onecall?lat=${getNeededCoordinates[0]}&lon=${getNeededCoordinates[1]}&exclude=current,minutely,hourly,alerts&units=imperial&appid=e15a543800b7e60db9e4e04aaf22a037`;\n  const response = await fetch(endpoint);\n  if (response.status !== 200) {\n    alert(\"Unexpected error happened. Please try again\");\n    return;\n  }\n  const data = await response.json();\n  data.daily.forEach((value, idx) => {\n    if (idx >= 0 && idx !== 7 && dataForAllDays.length !== 7) {\n      let dayname = new Date(value.dt * 1000).toLocaleDateString(\"en\", {\n        weekday: \"long\"\n      });\n      let icon = value.weather[0].icon;\n      let iconURL = `https://openweathermap.org/img/wn/${icon}@2x.png`;\n      let getProb = value.pop;\n      let rainProb = getProb * 100;\n      let minTemp = value.temp.min.toFixed(0);\n      let maxTemp = value.temp.max.toFixed(0);\n      let currentDayData = [dayname, rainProb, iconURL, minTemp, maxTemp];\n      dataForAllDays.push(currentDayData);\n    }\n  });\n  return dataForAllDays;\n}\n\n/**This is the code for the old weather api */\n\n// export default async function display7DayData(location) {\n//     if (!location) {\n//         alert(\"Unexpected error. Try again\");\n//     }\n\n//     let ifSavedLocation = true;\n//     let index = 0;\n//     const getSavedLocations = JSON.parse(localStorage.getItem(\"savedLocations\")); \n//     for (index = 0; index < getSavedLocations.length; index++) {\n//         if (location === getSavedLocations[index]) {\n//             break;\n//         }\n//     }\n\n//     if (!ifSavedLocation) {\n//         alert(\"Not in saved locations\");\n//         return;\n//     }\n\n//     let getAllCoordinates = JSON.parse(localStorage.getItem(\"allCoordinates\"));\n//     if (!getAllCoordinates) {\n//         getAllCoordinates = [[40.7127281,-74.0060152],[48.8588897,2.3200410217200766],[52.5170365,13.3888599]];\n//     }\n\n//     let getNeededCoordinates = getAllCoordinates[index];\n//     let endpoint = `https://api.weather.gov/points/${getNeededCoordinates[0]},${getNeededCoordinates[1]}`;\n//     const response = await fetch(endpoint);\n\n//     if (response.status !== 200) {\n//         alert(\"Unexpected error happened. Please try again\");\n//         return;\n//     }\n\n//     const data = await response.json();\n//     let forecastData = await data.properties.forecast;\n//     let response2 = await fetch(forecastData);\n\n//     if (response2.status !== 200) {\n//         alert(\"Unexpected error happened. Please try again\");\n//         return;\n//     }\n\n//     const data2 = await response2.json();\n//     let dailyData = await data2.properties.periods;\n//     let dataForAllDays = [];\n//     dailyData.forEach((value, idx) => {\n//         if (value.name.includes(\"Night\") === false && dataForAllDays.length !== 7) {\n//             let day = value.name;\n//             let temp = value.temperature;\n//             let icon = value.icon;\n//             let currentDayData = [day, temp, icon];\n//             dataForAllDays.push(currentDayData);\n//         }\n//     });\n\n//     return dataForAllDays;\n//     // let dataForAllDays = [];\n\n//     // data.daily.forEach((value, idx) => {\n//     //     if (idx >= 0 && idx !== 7 && dataForAllDays.length !== 7) {\n//     //         let dayname = new Date(value.dt * 1000).toLocaleDateString(\"en\", {\n//     //             weekday: \"long\",\n//     //         });\n//     //         let icon = value.weather[0].icon;\n//     //         let iconURL = `https://openweathermap.org/img/wn/${icon}@2x.png`;\n//     //         let getProb = value.pop;\n//     //         let rainProb = getProb * 100;\n//     //         let minTemp = value.temp.min.toFixed(0);\n//     //         let maxTemp = value.temp.max.toFixed(0);\n//     //         let currentDayData = [dayname, rainProb, iconURL, minTemp, maxTemp];\n//     //         dataForAllDays.push(currentDayData);\n//     //     }\n//     // });\n\n//     // return dataForAllDays;\n// }","map":{"version":3,"names":["display7DayData","location","alert","ifSavedLocation","index","getSavedLocations","JSON","parse","localStorage","getItem","length","dataForAllDays","getAllCoordinates","getNeededCoordinates","endpoint","response","fetch","responseData","json","newCoor","lat","lon","defaultLatLong","console","log","status","data","daily","forEach","value","idx","dayname","Date","dt","toLocaleDateString","weekday","icon","weather","iconURL","getProb","pop","rainProb","minTemp","temp","min","toFixed","maxTemp","max","currentDayData","push"],"sources":["/Users/emmanuelsotoruiz/Desktop/NYU/Fifth Year/Build Software/projects/final_project/WeatherApp/src/pages/Components/Helpers.js"],"sourcesContent":["export default async function display7DayData(location) {\r\n    if (!location) {\r\n        alert(\"Unexpected error. Try again\");\r\n    }\r\n\r\n    let ifSavedLocation = false;\r\n    let index = 0;\r\n    const getSavedLocations = JSON.parse(localStorage.getItem(\"savedLocations\")); \r\n    for (index = 0; index < getSavedLocations.length; index++) {\r\n        if (location === getSavedLocations[index]) {\r\n            ifSavedLocation = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    let dataForAllDays = [];\r\n    let getAllCoordinates;\r\n    let getNeededCoordinates;\r\n\r\n    // the location provided to us is not in the saved location, so we need to go get that lat and lon for that location\r\n    if (!ifSavedLocation) {\r\n        // alert(\"Not in saved locations\");\r\n        let endpoint = `https://api.openweathermap.org/geo/1.0/direct?q=${location}&appid=e15a543800b7e60db9e4e04aaf22a037`; // api to get coordinates lat and lon\r\n        const response = await fetch(endpoint);\r\n        const responseData = await response.json();\r\n        const newCoor = [responseData[0].lat, responseData[0].lon];\r\n        getNeededCoordinates = newCoor;\r\n        return;\r\n    } else {\r\n        getAllCoordinates = JSON.parse(localStorage.getItem(\"allCoordinates\"));\r\n        if (!getAllCoordinates) {\r\n            let defaultLatLong = [[40.7128,-74.0060],[48.8566,2.3522],[52.5200,13.4050]];\r\n            getAllCoordinates = defaultLatLong;\r\n            console.log(getAllCoordinates);\r\n        }\r\n        getNeededCoordinates = getAllCoordinates[index];\r\n    }\r\n    let endpoint = `https://api.openweathermap.org/data/2.5/onecall?lat=${getNeededCoordinates[0]}&lon=${getNeededCoordinates[1]}&exclude=current,minutely,hourly,alerts&units=imperial&appid=e15a543800b7e60db9e4e04aaf22a037`;\r\n    const response = await fetch(endpoint);\r\n\r\n    if (response.status !== 200) {\r\n        alert(\"Unexpected error happened. Please try again\");\r\n        return;\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    data.daily.forEach((value, idx) => {\r\n        if (idx >= 0 && idx !== 7 && dataForAllDays.length !== 7) {\r\n            let dayname = new Date(value.dt * 1000).toLocaleDateString(\"en\", {\r\n                weekday: \"long\",\r\n            });\r\n            let icon = value.weather[0].icon;\r\n            let iconURL = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n            let getProb = value.pop;\r\n            let rainProb = getProb * 100;\r\n            let minTemp = value.temp.min.toFixed(0);\r\n            let maxTemp = value.temp.max.toFixed(0);\r\n            let currentDayData = [dayname, rainProb, iconURL, minTemp, maxTemp];\r\n            dataForAllDays.push(currentDayData);\r\n        }\r\n    });\r\n\r\n    return dataForAllDays;\r\n}\r\n\r\n\r\n/**This is the code for the old weather api */\r\n\r\n// export default async function display7DayData(location) {\r\n//     if (!location) {\r\n//         alert(\"Unexpected error. Try again\");\r\n//     }\r\n\r\n//     let ifSavedLocation = true;\r\n//     let index = 0;\r\n//     const getSavedLocations = JSON.parse(localStorage.getItem(\"savedLocations\")); \r\n//     for (index = 0; index < getSavedLocations.length; index++) {\r\n//         if (location === getSavedLocations[index]) {\r\n//             break;\r\n//         }\r\n//     }\r\n\r\n//     if (!ifSavedLocation) {\r\n//         alert(\"Not in saved locations\");\r\n//         return;\r\n//     }\r\n\r\n//     let getAllCoordinates = JSON.parse(localStorage.getItem(\"allCoordinates\"));\r\n//     if (!getAllCoordinates) {\r\n//         getAllCoordinates = [[40.7127281,-74.0060152],[48.8588897,2.3200410217200766],[52.5170365,13.3888599]];\r\n//     }\r\n\r\n//     let getNeededCoordinates = getAllCoordinates[index];\r\n//     let endpoint = `https://api.weather.gov/points/${getNeededCoordinates[0]},${getNeededCoordinates[1]}`;\r\n//     const response = await fetch(endpoint);\r\n\r\n//     if (response.status !== 200) {\r\n//         alert(\"Unexpected error happened. Please try again\");\r\n//         return;\r\n//     }\r\n\r\n//     const data = await response.json();\r\n//     let forecastData = await data.properties.forecast;\r\n//     let response2 = await fetch(forecastData);\r\n\r\n//     if (response2.status !== 200) {\r\n//         alert(\"Unexpected error happened. Please try again\");\r\n//         return;\r\n//     }\r\n\r\n//     const data2 = await response2.json();\r\n//     let dailyData = await data2.properties.periods;\r\n//     let dataForAllDays = [];\r\n//     dailyData.forEach((value, idx) => {\r\n//         if (value.name.includes(\"Night\") === false && dataForAllDays.length !== 7) {\r\n//             let day = value.name;\r\n//             let temp = value.temperature;\r\n//             let icon = value.icon;\r\n//             let currentDayData = [day, temp, icon];\r\n//             dataForAllDays.push(currentDayData);\r\n//         }\r\n//     });\r\n\r\n//     return dataForAllDays;\r\n//     // let dataForAllDays = [];\r\n\r\n//     // data.daily.forEach((value, idx) => {\r\n//     //     if (idx >= 0 && idx !== 7 && dataForAllDays.length !== 7) {\r\n//     //         let dayname = new Date(value.dt * 1000).toLocaleDateString(\"en\", {\r\n//     //             weekday: \"long\",\r\n//     //         });\r\n//     //         let icon = value.weather[0].icon;\r\n//     //         let iconURL = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n//     //         let getProb = value.pop;\r\n//     //         let rainProb = getProb * 100;\r\n//     //         let minTemp = value.temp.min.toFixed(0);\r\n//     //         let maxTemp = value.temp.max.toFixed(0);\r\n//     //         let currentDayData = [dayname, rainProb, iconURL, minTemp, maxTemp];\r\n//     //         dataForAllDays.push(currentDayData);\r\n//     //     }\r\n//     // });\r\n\r\n//     // return dataForAllDays;\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}